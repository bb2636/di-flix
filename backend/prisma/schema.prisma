model User {
  user_id    Int     @id @default(autoincrement()) @map("user_id")
  email String  @unique 
  password  String?
  is_member   Boolean @default(false) // 멤버십 유무 (기본값 false)
  is_deleted  Boolean @default(true) // 탈퇴 여부 (기본값 true) 탈퇴 시 false
  watchHistories WatchHistory[] @relation(name: "UserToWatchHistory")
  wishlists      Wishlist[]      @relation(name: "UserToWishlist")
}

model Category {
    category_id Int  @id @default(autoincrement())
    category_name String 
    contents Content[] @relation(name: "CategoryToContent")
}

model Content {
  movie_id    Int     @id @default(autoincrement())
  title       String  @db.VarChar(255)
  description String? @db.Text
  genre_ids    Int?

  views       Int     @default(0)

  genre       Genre?  @relation(fields: [genre_ids], references: [genre_ids])
}

model WatchHistory {
  history_id Int      @id @default(autoincrement())
  user_id    Int?
  movie_id   Int?

  user   User?   @relation(name: "UserToWatchHistory", fields: [user_id], references: [user_id])
  movie  Content? @relation(fields: [movie_id], references: [movie_id])

  timestamp DateTime @default(now())
}

model Wishlist {
  wishlist_id Int     @id @default(autoincrement())
  user_id     Int?
  movie_id    Int?

  user   User?    @relation(name: "UserToWishlist", fields: [user_id], references: [user_id])
  movie  Content? @relation(fields: [movie_id], references: [movie_id])
}
model Genre {
  genre_ids   Int    @id @default(autoincrement())
  genre_name String
}